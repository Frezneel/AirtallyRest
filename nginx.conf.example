# AirTally REST API - Nginx Configuration Examples
# Copy this file to /etc/nginx/sites-available/airtally-api
# Then create symlink: sudo ln -s /etc/nginx/sites-available/airtally-api /etc/nginx/sites-enabled/

##############################################################################
# Option 1: HTTP Only (Direct IP Access)
# Use this if you don't have a domain name
##############################################################################

server {
    listen 80;
    listen [::]:80;
    server_name _;  # Accept any hostname

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # API Location
    location /api {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;

        # Proxy headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

##############################################################################
# Option 2: HTTP with Domain (Before SSL Setup)
# Use this initially before running certbot
##############################################################################

# server {
#     listen 80;
#     listen [::]:80;
#     server_name api.yourdomain.com;  # CHANGE THIS
#
#     # Security headers
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#
#     # API Location
#     location /api {
#         proxy_pass http://127.0.0.1:3000;
#         proxy_http_version 1.1;
#
#         # Proxy headers
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#
#         # Timeouts
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#     }
#
#     # Health check endpoint
#     location /health {
#         access_log off;
#         return 200 "healthy\n";
#         add_header Content-Type text/plain;
#     }
#
#     # Deny access to hidden files
#     location ~ /\. {
#         deny all;
#         access_log off;
#         log_not_found off;
#     }
# }

##############################################################################
# Option 3: HTTPS with SSL (After Certbot)
# Certbot will automatically modify your config, but this is the final result
##############################################################################

# server {
#     listen 80;
#     listen [::]:80;
#     server_name api.yourdomain.com;  # CHANGE THIS
#
#     # Redirect all HTTP to HTTPS
#     return 301 https://$server_name$request_uri;
# }
#
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name api.yourdomain.com;  # CHANGE THIS
#
#     # SSL Configuration (managed by Certbot)
#     ssl_certificate /etc/letsencrypt/live/api.yourdomain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/api.yourdomain.com/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#
#     # Security headers
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Referrer-Policy "no-referrer-when-downgrade" always;
#
#     # API Location
#     location /api {
#         proxy_pass http://127.0.0.1:3000;
#         proxy_http_version 1.1;
#
#         # Proxy headers
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#
#         # Timeouts
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#
#         # CORS (if needed for web clients)
#         # add_header Access-Control-Allow-Origin "*" always;
#         # add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
#         # add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
#     }
#
#     # Health check endpoint
#     location /health {
#         access_log off;
#         return 200 "healthy\n";
#         add_header Content-Type text/plain;
#     }
#
#     # Deny access to hidden files
#     location ~ /\. {
#         deny all;
#         access_log off;
#         log_not_found off;
#     }
#
#     # Logging
#     access_log /var/log/nginx/airtally_access.log;
#     error_log /var/log/nginx/airtally_error.log;
# }

##############################################################################
# Option 4: Advanced Configuration with Rate Limiting & Caching
##############################################################################

# # Rate limiting zone (add this in http block or at top of server block)
# limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
#
# # Cache zone for GET requests
# proxy_cache_path /var/cache/nginx/airtally levels=1:2 keys_zone=airtally_cache:10m max_size=100m inactive=60m;
#
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name api.yourdomain.com;
#
#     # SSL Configuration
#     ssl_certificate /etc/letsencrypt/live/api.yourdomain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/api.yourdomain.com/privkey.pem;
#
#     # Security headers
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#
#     # API Location with rate limiting
#     location /api {
#         # Apply rate limiting
#         limit_req zone=api_limit burst=20 nodelay;
#
#         proxy_pass http://127.0.0.1:3000;
#         proxy_http_version 1.1;
#
#         # Proxy headers
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#
#         # Caching for GET requests only
#         proxy_cache airtally_cache;
#         proxy_cache_valid 200 5m;
#         proxy_cache_methods GET HEAD;
#         proxy_cache_key "$scheme$request_method$host$request_uri";
#         add_header X-Cache-Status $upstream_cache_status;
#
#         # Timeouts
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#     }
#
#     # Health check endpoint
#     location /health {
#         access_log off;
#         return 200 "healthy\n";
#         add_header Content-Type text/plain;
#     }
# }

##############################################################################
# Installation Instructions
##############################################################################

# 1. Choose one of the configurations above (uncomment the one you need)
# 2. Save this file to: /etc/nginx/sites-available/airtally-api
# 3. Create symlink: sudo ln -s /etc/nginx/sites-available/airtally-api /etc/nginx/sites-enabled/
# 4. Test configuration: sudo nginx -t
# 5. Reload Nginx: sudo systemctl reload nginx

##############################################################################
# Testing Your Configuration
##############################################################################

# Test from server:
#   curl http://localhost/api/flights
#
# Test from external:
#   curl http://YOUR_SERVER_IP/api/flights
#   curl https://api.yourdomain.com/api/flights (if SSL enabled)
#
# Check Nginx status:
#   sudo systemctl status nginx
#
# View Nginx logs:
#   sudo tail -f /var/log/nginx/access.log
#   sudo tail -f /var/log/nginx/error.log